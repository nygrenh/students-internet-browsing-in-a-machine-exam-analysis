q
bad_performers = data.select { |d| d['points'] <= 7 }.map { |d| d['visited_links'] }
bad_link_counts
good_link_counts
puts JSON.generate bad_by_category
puts JSON.generate good_by_category
JSON.generate good_by_category
JSON.striginfy good_by_category
good_by_category
q
y
q
good_by_category
q
bad_by_category
good_by_category
q
good_by_category
q
good_by_category['stack_overflow']
bad_by_category['stack_overflow']
bad_by_category['javadoc']
good_by_category['javadoc']
good_by_category
good_by_categort
good_by_category[javadoc]'
good_by_category
bad_by_category
q
[] << 'a'
good_by_category.flatten
good_by_category
q
good_filtered.first.group_by {|link| link['category'] }.map {|k,v| [k, v.length]}
good_filtered.first.group_by {|link| link['category'] }
good_filtered.first.group_by
good_filtered.first.group
good_filtered.first
good_filtered
bad_domain_stats
good_domain_stats
q
good_domains.map(&:length)
good_domains
q
c
q
PublicSuffix.domain("stackoverflow.com")
PublicSuffix.domain("http://stackoverflow.com")
PublicSuffix.domain("http://stackoverflow.com/questions/14361556/remove-all-special-characters-in-java")
PublicSuffix.domain(links.first['url'])
links.first['url']
links.first
links
q
good_domains
q
good_filtered.first.first['url']
good_filtered.first.first
good_filtered.first.url
good_filtered.first
good_filtered
bad_stats
good_stats
q
bad_avg
good_avg
q
good_links_count.sum.fdiq
good_links_count.sum
good_links_count
good_links.sum
good_links_count.average
good_links_count.avg
good_links_count
q
good_filtered.map(&:length)
q
links.class.class
links.class
links
c
links
link
c
q
link
q
link
q
l
q
links.map {|l| l.class}
links.select { |l| !l['essay_period']; puts l }
links.select { |l| !l['essay_period'] }
links.select { |l| puts l }
links.select { |l| puts l; false }
links.select { |l| false }
links.select { |l| !l['essay_period'] }
links.select { |l| !l['essay_period'] && l['category'] != 'essay_page' }
links.first.first['category']
links.first.first['essay_period']
links.first.first
links.first
c
good_performers.first
good_performers.class
good_performers
data.first
data.class
data.calss
data
data.select { |d| d['points'] <= 7 }.first
data.select { |d| d['points'] <= 7 }
good_performers
data.first['visited_links']
data.first
data
q
data
links
q
links.first['essay_period']
links.first
links.class
links
q
good_performers[0]
good_performers
q
data[0]
bad_performers
q
3~q
bad_performers.length.to_f / data.length
good_performers.length.to_f / data.length
good_performers.length.to_d / data.length
good_performers.length / data.length
good_performers.length
bad_performers.length
data.length
q
qa
data.select {|d| d['points'] <= 7}.map {|d| d['points']}.sort
data.select {|d| d['points'] < 7}.map {|d| d['points']}.sort
data.map {|d| d['points']}.sort
data.map {|d| d['points']}
data.map(&:points)
data[0]
data.class
data
